--NATURAL JOIN

--각각의 테이블에서 스키마가 같은 이름인 것을 알아서 JOIN 시킨다.
SELECT * FROM JOBS NATURAL JOIN JOB_HISTORY;

--EMPLOYEES, DEPARTMENTS 테이블에서 사원명, 부서번호, 부서명을 NATURAL JOIN을 이용하여 조회(사원명 순으로 조회)
SELECT FIRST_NAME AS 사원명, DEPARTMENT_ID AS 부서번호, DEPARTMENT_NAME AS 부서명
FROM EMPLOYEES NATURAL JOIN DEPARTMENTS
ORDER BY 1;
--테이블에 ALAS를 줄때 양쪽 테이블에 들어있는 속성은 지정자를 줄 수 없다(나머지는 괜찮)

--DEPARTMENTS, LOCATIONS 테이블을 NATURAL JOIN하여 부서번호, 부서명,지역코드, 근무도시 조회(단, 10, 30번 부서만 조회)
SELECT DEPARTMENT_ID 부서번호, DEPARTMENT_NAME 부서명, LOCATION_ID 지역코드, CITY 근무도시
FROM DEPARTMENTS NATURAL JOIN LOCATIONS
WHERE DEPARTMENT_ID IN (10,30);

--사원명, 급여, 부서번호, 부서명, 근무도시를 NATURAL JOIN을 이용하여 조회(사원명 순으로 정렬)
SELECT FIRST_NAME, SALARY, DEPARTMENT_ID, DEPARTMENT_NAME, CITY
FROM EMPLOYEES NATURAL JOIN DEPARTMENTS NATURAL JOIN LOCATIONS
ORDER BY 1;

--NATURAL JOIN TEST
CREATE TABLE TEST_JOIN 
(
  TEST VARCHAR2(20) 
, NO NUMBER(2) 
);
CREATE TABLE TEST_NATURAL_JOIN
(
  JOB_ID VARCHAR2(10) 
, JOB_TITLE VARCHAR2(25) NOT NULL 
, TEST NUMBER(10) 
);

SELECT * FROM TAB;

INSERT INTO TEST_JOIN VALUES('1000', 20);
INSERT INTO TEST_NATURAL_JOIN VALUES('10','TEST_JOB',1000);

--문자 형태의 1000을 숫자로 변경해서 JOIN실행된다(문자여도 숫자 형태이면 된다)
SELECT * FROM TEST_JOIN NATURAL JOIN TEST_NATURAL_JOIN;

INSERT INTO TEST_JOIN VALUES('ABC', 20);

--이렇게 되면 에러가 발생한다.
SELECT * FROM TEST_JOIN NATURAL JOIN TEST_NATURAL_JOIN;
--테이블의 속성이 중요한게 아니라 들어가는 데이터의 형식이 중요하다.

--JOIN~USING
--EMPLOYEES, DEPARTMENTS 테이블을 이용해 사원명, 부서번호, 부서명을 USING 절을 이용해서 조회
--USING에서도 QUALIFIER를 사용하면 안된다.
SELECT  FIRST_NAME, DEPARTMENT_ID, DEPARTMENT_NAME 
FROM EMPLOYEES JOIN DEPARTMENTS USING (DEPARTMENT_ID, MANAGER_ID);

SELECT  FIRST_NAME, DEPARTMENT_ID, DEPARTMENT_NAME 
FROM EMPLOYEES NATURAL JOIN DEPARTMENTS;
--NATURAL 과 USING은 같이 사용하지 않는다.



